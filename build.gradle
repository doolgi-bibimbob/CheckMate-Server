plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.seonlim'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

tasks.withType(JavaCompile).configureEach {
	options.release = 17
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// 기본 QueryDSL JPA
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	implementation 'org.apache.commons:commons-lang3:3.18.0'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9'
	implementation("software.amazon.awssdk:s3:2.25.28")


	// annotationProcessor (컴파일 시 Q타입 생성용)
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api:2.1.1'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.projectlombok:lombok'

	/* ── Spring Security ──────────────────────────────────── */
	implementation 'org.springframework.boot:spring-boot-starter-security'

	/* 필요 시: 리소스 서버(JWT 검증) + JOSE 암복호화 */
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

	testImplementation 'org.springframework.security:spring-security-test'

	/* JJWT BOM ↛ jjwt-root 사용 */
	implementation platform('io.jsonwebtoken:jjwt-root:0.12.6')

	/* 컴파일 타임 */
	implementation 'io.jsonwebtoken:jjwt-api'

	/* 런타임 */
	runtimeOnly   'io.jsonwebtoken:jjwt-impl'
	runtimeOnly   'io.jsonwebtoken:jjwt-jackson'

	implementation("org.springframework.boot:spring-boot-starter-validation")


}

tasks.named('test') {
	useJUnitPlatform()
}
